@page "/vybaveni"
@using Blazor.Components

<div class="p-4 ">
    <div class="grid grid-cols-3 justify-evenly text-center items-center">
    <div>
    <p>Počet vybavení: @seznamVybaveni.Count</p>
        <button class="bg-green-500 rounded-md p-1" @onclick="noveVybaveni">
            Nový seznam
        </button>
    </div>
    <div>
        <p>Pro přidání náhodných předmětů do seznamu zadejte počet předmětů a potvrďte tlačítkem "Přidat náhodné vybavení"</p>
        <input class="border-2 border-blue-700" type="text" @bind-value=@oninput />
        <button class="bg-amber-500 rounded-md p-1 mx-2" @onclick="pridatVybaveni">
            Přidat náhodné vybavení
        </button>@error
    </div>
    <div><p></p>
        <button class="bg-fuchsia-700 rounded-md p-1" @onclick="()=> {newModel = new VybaveniVm(str, 0, DateTime.Now.AddYears(-2), DateTime.Now, Guid.NewGuid());newModel.IsInEditMode=true; isInNewMode = true;}">
            Přidat konkrétní vybavení
        </button>
    </div>
    </div>

    <div class="grid grid-cols-6 border-b-2 border-black font-bold">
        <div class=" w-full h-full">Název</div>
        <div class=" w-full h-full">Cena(Kč)</div>
        <div class=" w-full h-full">Datum nákupu</div>
        <div class=" w-full h-full">Datum poslední revize</div>
        <div class=" w-full h-full">Potřebuje revizi?</div>
    </div>
    <div>
        @if (isInNewMode)
        {
            ArgumentNullException.ThrowIfNull(newModel);
            <div class="my-1">
            <VybaveRow Vyb="newModel" EditDoneCallback="() => {seznamVybaveni.Insert(0,newModel); isInNewMode = false;}">

                <div class="flex justify-center gap-2">
                 
                        <button type="submit" class="twbtn bg-teal-500">Přidej</button>
                        <button type="button" @onclick="() => isInNewMode = false" class="twbtn bg-yellow-500">Zrušit</button>
                   
                </div>
            </VybaveRow>
           </div>
        }

        @foreach (VybaveniVm vyb in seznamVybaveni)
        {
            <div class="grid grid-cols-6 my-1 @((vyb.IsRevisionNeeded) ? "bg-red-400" : "")">
                <VybaveRow Vyb="vyb"
                       SmazEventCallback="() => seznamVybaveni.Remove(vyb)"
                       RevizeEventCallback="() => vyb.LastRevisionDateTime=DateTime.Now">
                </VybaveRow>
            </div>
        }
    </div>
</div>




@code {

    List<VybaveniVm> seznamVybaveni;
    string? oninput;
    string? error;
    string str = "";
    VybaveniVm newModel;
    //VybaveniVm newModel = new VybaveniVm("", 0, DateTime.Now.AddYears(-2), DateTime.Now, Guid.NewGuid());
    bool isInNewMode;


    public Vybaveni_nemocnice()
    {
        seznamVybaveni = VybaveniVm.VratRandSeznam(15);
    }
    public void noveVybaveni()
    {
        seznamVybaveni.Clear();
        seznamVybaveni = VybaveniVm.VratRandSeznam(15);
    }
    public void pridatVybaveni()
    {
        error = "";
        if (!int.TryParse(oninput, out int pocet))
        {
            error = "Musíš zadat celé číslo.";
        }
        else if (pocet < 0)
        {
            error = "Zadat lze pouze nezáporné číslo.";
        }
        else
        {
            List<VybaveniVm> List = VybaveniVm.VratRandSeznam(pocet);
            for (int i = 0; i < List.Count; i++)
            {
                seznamVybaveni.Add(List[i]);
            }
        }

    }



}

